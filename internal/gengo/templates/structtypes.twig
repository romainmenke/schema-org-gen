package {{ package_name }}

import "encoding/json"

// {{ type_name }} see : {{ type_url }}
type {{ type_name }} struct {

	{% for parent in parents %}
		// With properties from {{ parent.type_name }} see : {{ parent.type_url }}
		//
	{% endfor %}

	{% for field in fields %}
		{{ field.external_ref }}
		{{ field.comment }}
		{{ field.types_comment }}
		{{ field.name }} {{ field.go_type }} `json:"{{ field.json_name }},omitempty"`
	{% endfor %}
}

func (v {{ type_name }}) MarshalJSON() ([]byte, error) {
	type Alias {{ type_name }}

	b, err := json.Marshal((Alias)(v))
	if err != nil {
		return nil, err
	}

	return append([]byte("{\"@context\":\"http://schema.org\",\"@type\":\"{{ type_name }}\","), b[1:]...), nil
}
